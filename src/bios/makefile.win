#
#  Makefile for building the Zet BIOS in Windows
#  Copyright (C) 2010  Zeus Gomez Marmolejo <zeus@aluzina.org>
#  Copyright (C) 2010  Donna Polehn <dpolehn@verizon.net>
#
#  This file is part of the Zet processor. This program is free software;
#  you can redistribute it and/or modify it under the terms of the GNU 
#  General Public License as published by the Free Software Foundation;
#  either version 3, or (at your option) any later version.
#
#  Zet is distrubuted in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
#  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public
#  License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with Zet; see the file COPYING. If not, see
#  <http://www.gnu.org/licenses/>.
#

#
#  ZET BIOS BUILD MAKE - Windows version - 05-24-2010
#  ----------------------------------------------------------------------------
#
#  This is the make file for the Zet Rom BIOS and VGA BIOS Builds. 
#  To build it, you will need the Open Watcom compiler. If you have
#  it installed on your machine, then you should be able to just type
#  wmake and watcom should build it. There will be a small number of warning
#  messages, this is normal.
#

# File extension in Windows
O = .obj
E = .exe

# Current directory (for executing programs)
CDIR = .\

!include "common.inc"

all: bios.rom

#
# This section combines all 3 rom sections built below, into one 128K ROM 
# ready to be installed. When everything is done running and if all goes well
# you should have a file BIOS.ROM of exactly 128K, this is your bios rom to 
# download into your DE1 board.
#
bios.rom: vgabios.rom ff.rom zetbios.rom
	copy /b vgabios.rom+ff.rom+zetbios.rom $@

#
# This section compiles and links the biossums, vgasums and ff utilities.
# The biossums is used to computer the checksum byte which is then tacked 
# onto the end of zetbios.rom. The vgasums program scans the vgabios.rom
# file, computes the checksum which is added to the end. It also pads the
# file out to a full 32k. The ff utility just makes a 32k file of 0xFF which
# is used to pad it to a full 64k segment. After all that, both rom files will
# be 64K in length and ready to be programed into the flash.
#
# The C option flags for this build are standard console build since
# these utilities will run on your PC not on the ZET
#

ff$(E): ff$(O) .autodepend
	wlink name ff d all sys nt op m op maxe=25 op q op symf FIL ff.obj

ff$(O): ff.c
	wcc386 $(COPTS) ff.c 

biossums$(E): biossums$(O) .autodepend
	wlink name biossums d all sys nt op m op maxe=25 op q op symf FIL biossums.obj

biossums$(O): biossums.c
	wcc386 $(COPTS) biossums.c 

vgasums$(E): vgasums$(O) .autodepend
	wlink name vgasums d all sys nt op m op maxe=25 op q op symf FIL vgasums.obj

vgasums$(O): vgasums.c
	wcc386 $(COPTS) vgasums.c 

clean:
	del  *.obj *.sym *.rom *.exe *.err *.map

#
#  End of make.
#
